{"ast":null,"code":"var _jsxFileName = \"/Users/renatama/renata/projects/SpeakSpot/web/src/context/userContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getDatabase, onValue, ref } from 'firebase/database';\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nexport const useUserContext = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUserContext must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUserContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [accessToken, setAccessToken] = useState(null);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setAccessToken(user.refreshToken);\n        const db = getDatabase();\n        const userRef = ref(db, `users/${user.uid}`);\n        onValue(userRef, snapshot => {\n          const data = snapshot.val();\n          if (data) {\n            setUserData({\n              name: data.name,\n              email: data.email,\n              id: user.uid\n            });\n          }\n        }, {\n          onlyOnce: true\n        });\n      } else {\n        setAccessToken(null);\n        setUserData({});\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      accessToken,\n      setAccessToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"sHY+nnPBfgDl5i+kE7zHvHvlNoA=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["getAuth","onAuthStateChanged","getDatabase","onValue","ref","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","undefined","useUserContext","_s","context","Error","UserProvider","children","_s2","accessToken","setAccessToken","userData","setUserData","auth","user","refreshToken","db","userRef","uid","snapshot","data","val","name","email","id","onlyOnce","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/renatama/renata/projects/SpeakSpot/web/src/context/userContext.tsx"],"sourcesContent":["import { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { getDatabase, onValue, ref } from 'firebase/database';\nimport { createContext, useContext, useState, ReactNode, useEffect } from 'react';\n\ninterface UserData {\n  name?: string;\n  email?: string;\n  id?: string;\n}\n\ninterface UserContextType {\n  accessToken: string | null;\n  setAccessToken: (token: string | null) => void;\n  userData: UserData;\n  setUserData: (data: UserData) => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const useUserContext = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUserContext must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }: { children: ReactNode }) => {\n  const [accessToken, setAccessToken] = useState<string | null>(null);\n  const [userData, setUserData] = useState<UserData>({});\n\n  useEffect(() => {\n    const auth = getAuth();\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setAccessToken(user.refreshToken);\n  \n        const db = getDatabase();\n        const userRef = ref(db, `users/${user.uid}`);\n        onValue(userRef, (snapshot) => {\n          const data = snapshot.val();\n          if (data) {\n            setUserData({\n              name: data.name,\n              email: data.email,\n              id: user.uid,\n            });\n          }\n        }, {\n          onlyOnce: true \n        });\n      } else {\n        setAccessToken(null);\n        setUserData({});\n      }\n    });\n  }, []);\n  \n\n  return (\n    <UserContext.Provider value={{ accessToken, setAccessToken }}>\n      {children}\n    </UserContext.Provider>\n  );\n};"],"mappings":";;;AAAA,SAASA,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,WAAW,EAAEC,OAAO,EAAEC,GAAG,QAAQ,mBAAmB;AAC7D,SAASC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAaC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAelF,MAAMC,WAAW,gBAAGN,aAAa,CAA8BO,SAAS,CAAC;AAEzE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGT,UAAU,CAACK,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,GAAA;EACrE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EACnE,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAW,CAAC,CAAC,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,MAAMgB,IAAI,GAAGxB,OAAO,CAAC,CAAC;IACtBC,kBAAkB,CAACuB,IAAI,EAAGC,IAAI,IAAK;MACjC,IAAIA,IAAI,EAAE;QACRJ,cAAc,CAACI,IAAI,CAACC,YAAY,CAAC;QAEjC,MAAMC,EAAE,GAAGzB,WAAW,CAAC,CAAC;QACxB,MAAM0B,OAAO,GAAGxB,GAAG,CAACuB,EAAE,EAAG,SAAQF,IAAI,CAACI,GAAI,EAAC,CAAC;QAC5C1B,OAAO,CAACyB,OAAO,EAAGE,QAAQ,IAAK;UAC7B,MAAMC,IAAI,GAAGD,QAAQ,CAACE,GAAG,CAAC,CAAC;UAC3B,IAAID,IAAI,EAAE;YACRR,WAAW,CAAC;cACVU,IAAI,EAAEF,IAAI,CAACE,IAAI;cACfC,KAAK,EAAEH,IAAI,CAACG,KAAK;cACjBC,EAAE,EAAEV,IAAI,CAACI;YACX,CAAC,CAAC;UACJ;QACF,CAAC,EAAE;UACDO,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM;QACLf,cAAc,CAAC,IAAI,CAAC;QACpBE,WAAW,CAAC,CAAC,CAAC,CAAC;MACjB;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEb,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAElB,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAC1DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,GAAA,CArCWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}