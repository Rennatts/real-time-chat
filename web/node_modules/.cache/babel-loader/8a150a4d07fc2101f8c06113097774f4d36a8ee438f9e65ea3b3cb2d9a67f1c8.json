{"ast":null,"code":"var _jsxFileName = \"/Users/renatama/renata/projects/SpeakSpot/web/src/context/userContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(undefined);\nexport const useUserContext = () => {\n  _s();\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUserContext must be used within a UserProvider');\n  }\n  return context;\n};\n_s(useUserContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst UserProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState({\n    accessToken: null,\n    userId: null,\n    userName: null\n  });\n  const setUserData = data => {\n    setUser(data);\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      ...user,\n      setUserData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s2(UserProvider, \"ztGOfqiEhgh0vt7hBkqw15p8hUA=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useContext","useState","jsxDEV","_jsxDEV","UserContext","undefined","useUserContext","_s","context","Error","UserProvider","children","_s2","user","setUser","accessToken","userId","userName","setUserData","data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/renatama/renata/projects/SpeakSpot/web/src/context/userContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface UserContextType {\n  accessToken: string | null;\n  userId: string | null;\n  userName: string | null;\n  setUserData: (data: { accessToken: string | null; userId: string | null; userName: string | null }) => void;\n}\n\nconst UserContext = createContext<UserContextType | undefined>(undefined);\n\nexport const useUserContext = () => {\n  const context = useContext(UserContext);\n  if (context === undefined) {\n    throw new Error('useUserContext must be used within a UserProvider');\n  }\n  return context;\n};\n\nconst UserProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState({\n    accessToken: null,\n    userId: null,\n    userName: null\n  });\n\n  const setUserData = (data: { accessToken: string | null; userId: string | null; userName: string | null }) => {\n    setUser(data);\n  };\n\n  return (\n    <UserContext.Provider value={{ ...user, setUserData }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASvE,MAAMC,WAAW,gBAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGR,UAAU,CAACI,WAAW,CAAC;EACvC,IAAII,OAAO,KAAKH,SAAS,EAAE;IACzB,MAAM,IAAII,KAAK,CAAC,mDAAmD,CAAC;EACtE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,cAAc;AAQ3B,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAkC,CAAC,KAAK;EAAAC,GAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC;IAC/Bc,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE,IAAI;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,WAAW,GAAIC,IAAoF,IAAK;IAC5GL,OAAO,CAACK,IAAI,CAAC;EACf,CAAC;EAED,oBACEhB,OAAA,CAACC,WAAW,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGR,IAAI;MAAEK;IAAY,CAAE;IAAAP,QAAA,EACnDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACb,GAAA,CAhBIF,YAAY;AAAAgB,EAAA,GAAZhB,YAAY;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}