{"ast":null,"code":"var _jsxFileName = \"/Users/renatama/renata/projects/echobind/src/pages/SignupPage.tsx\",\n  _s = $RefreshSig$();\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport React, { useRef } from 'react';\nimport { auth } from '../services/firebase';\nimport { useUserContext } from '../context/userContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignupPage() {\n  _s();\n  const nameRef = useRef(null);\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const [error, setError] = React.useState('');\n  const {\n    setAccessToken\n  } = useUserContext();\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    var _emailRef$current, _passwordRef$current;\n    e.preventDefault();\n    setError('');\n    const email = (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value;\n    const password = (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value;\n    if (email && password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        if (userCredential.user !== undefined) {\n          const token = await userCredential.user.getIdToken();\n          setAccessToken(token);\n          navigate('/');\n        }\n      } catch (error) {\n        if (error instanceof Error) setError(error.message);\n      }\n    } else {\n      setError('Please fill in all fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      placeholder: \"Name\",\n      ref: nameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      ref: emailRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: passwordRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"GuzsS0ZsTgC9yWjDwfRwpfz/TSs=\", false, function () {\n  return [useUserContext, useNavigate];\n});\n_c = SignupPage;\nexport default SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["createUserWithEmailAndPassword","React","useRef","auth","useUserContext","useNavigate","jsxDEV","_jsxDEV","SignupPage","_s","nameRef","emailRef","passwordRef","error","setError","useState","setAccessToken","navigate","handleSubmit","e","_emailRef$current","_passwordRef$current","preventDefault","email","current","value","password","userCredential","user","undefined","token","getIdToken","Error","message","onSubmit","children","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/renatama/renata/projects/echobind/src/pages/SignupPage.tsx"],"sourcesContent":["import { createUserWithEmailAndPassword } from 'firebase/auth';\nimport React, { useEffect, useRef, useState } from 'react'\nimport { auth } from '../services/firebase';\nimport { useUserContext } from '../context/userContext';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction SignupPage() {\n  const nameRef = useRef<HTMLInputElement>(null);\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = React.useState<string>('');\n  const { setAccessToken } = useUserContext();\n  const navigate = useNavigate();\n\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setError('');\n\n    const email = emailRef.current?.value;\n    const password = passwordRef.current?.value;\n\n    if (email && password) {\n      try {\n        const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n        \n        if(userCredential.user !== undefined){\n          const token = await userCredential.user.getIdToken();\n  \n          setAccessToken(token);\n          navigate('/')\n        }\n      } catch (error) {\n        if (error instanceof Error) setError(error.message)\n      }\n    } else {\n      setError('Please fill in all fields.');\n    }\n\n  };\n\n    return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"name\"\n        placeholder=\"Name\"\n        ref={nameRef}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        ref={emailRef}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        ref={passwordRef}\n      />\n      <button type=\"submit\">Login</button>\n      {error && <p>{error}</p>}\n    </form>\n    )\n}\n\nexport default SignupPage\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}