{"ast":null,"code":"var _jsxFileName = \"/Users/renatama/renata/projects/echobind/src/pages/LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  // Create refs for email and password inputs\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const [error, setError] = React.useState('');\n  const handleLogin = async e => {\n    var _emailRef$current, _passwordRef$current;\n    e.preventDefault(); // Prevent the form from submitting traditionally\n    const email = emailRef === null || emailRef === void 0 ? void 0 : (_emailRef$current = emailRef.current) === null || _emailRef$current === void 0 ? void 0 : _emailRef$current.value;\n    const password = passwordRef === null || passwordRef === void 0 ? void 0 : (_passwordRef$current = passwordRef.current) === null || _passwordRef$current === void 0 ? void 0 : _passwordRef$current.value;\n    if (email && password) {\n      try {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('User logged in successfully');\n      } catch (error) {\n        setError(error.message || \"An unknown error occurred\");\n        console.error(\"Error logging in: \", error.message);\n      }\n    } else {\n      setError(\"Please enter both email and password.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      ref: emailRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      ref: passwordRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"vbKhCgVWJGHfHAp3sqrOSJZOB/A=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","signInWithEmailAndPassword","auth","jsxDEV","_jsxDEV","LoginPage","_s","emailRef","passwordRef","error","setError","useState","handleLogin","e","_emailRef$current","_passwordRef$current","preventDefault","email","current","value","password","console","log","message","onSubmit","children","type","placeholder","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/renatama/renata/projects/echobind/src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { signInWithEmailAndPassword } from 'firebase/auth';\nimport { auth } from '../services/firebase';\n\nfunction LoginPage() {\n  // Create refs for email and password inputs\n  const emailRef = useRef<HTMLInputElement>(null);\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const [error, setError] = React.useState<string>('');\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault(); // Prevent the form from submitting traditionally\n    const email = emailRef?.current?.value;\n    const password = passwordRef?.current?.value;\n\n    if (email && password) {\n      try {\n        await signInWithEmailAndPassword(auth, email, password);\n        console.log('User logged in successfully');\n      } catch (error: any) { \n        setError(error.message || \"An unknown error occurred\");\n        console.error(\"Error logging in: \", error.message);\n      }\n    } else {\n      setError(\"Please enter both email and password.\");\n    }\n  \n  };\n\n  return (\n    <form onSubmit={handleLogin}>\n      <input\n        type=\"email\"\n        placeholder=\"Email\"\n        ref={emailRef}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        ref={passwordRef}\n      />\n      <button type=\"submit\">Login</button>\n      {error && <p>{error}</p>}\n    </form>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,0BAA0B,QAAQ,eAAe;AAC1D,SAASC,IAAI,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAMC,QAAQ,GAAGP,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAMQ,WAAW,GAAGR,MAAM,CAAmB,IAAI,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAS,EAAE,CAAC;EAEpD,MAAMC,WAAW,GAAG,MAAOC,CAAkB,IAAK;IAAA,IAAAC,iBAAA,EAAAC,oBAAA;IAChDF,CAAC,CAACG,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,MAAMC,KAAK,GAAGV,QAAQ,aAARA,QAAQ,wBAAAO,iBAAA,GAARP,QAAQ,CAAEW,OAAO,cAAAJ,iBAAA,uBAAjBA,iBAAA,CAAmBK,KAAK;IACtC,MAAMC,QAAQ,GAAGZ,WAAW,aAAXA,WAAW,wBAAAO,oBAAA,GAAXP,WAAW,CAAEU,OAAO,cAAAH,oBAAA,uBAApBA,oBAAA,CAAsBI,KAAK;IAE5C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrB,IAAI;QACF,MAAMnB,0BAA0B,CAACC,IAAI,EAAEe,KAAK,EAAEG,QAAQ,CAAC;QACvDC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC5C,CAAC,CAAC,OAAOb,KAAU,EAAE;QACnBC,QAAQ,CAACD,KAAK,CAACc,OAAO,IAAI,2BAA2B,CAAC;QACtDF,OAAO,CAACZ,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACc,OAAO,CAAC;MACpD;IACF,CAAC,MAAM;MACLb,QAAQ,CAAC,uCAAuC,CAAC;IACnD;EAEF,CAAC;EAED,oBACEN,OAAA;IAAMoB,QAAQ,EAAEZ,WAAY;IAAAa,QAAA,gBAC1BrB,OAAA;MACEsB,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC,OAAO;MACnBC,GAAG,EAAErB;IAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACF5B,OAAA;MACEsB,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,GAAG,EAAEpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACF5B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnCvB,KAAK,iBAAIL,OAAA;MAAAqB,QAAA,EAAIhB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEX;AAAC1B,EAAA,CAzCQD,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA2ClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}